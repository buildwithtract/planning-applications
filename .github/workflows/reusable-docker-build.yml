name: Reusable Docker Build
on:
  workflow_call:
    inputs:
      directory:
        required: true
        type: string
      build-context:
        required: false
        type: string
        default: .
      dockerfile:
        required: false
        type: string
        default: Dockerfile.scrapy
      ghcr-target:
        required: false
        type: string
      prebuild:
        required: false
        type: string
jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prebuild
        if: ${{ inputs.prebuild }}
        working-directory: ${{ inputs.directory }}
        run: |
          ${{ inputs.prebuild }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.build-context }}
          push: ${{ inputs.ghcr-target != '' }}
          load: ${{ inputs.ghcr-target == '' }}
          tags: ${{ inputs.ghcr-target != '' && format('ghcr.io/{0}/{1}', github.repository_owner, inputs.ghcr-target) || format('{0}:latest', inputs.directory) }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ inputs.directory }}:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ inputs.directory }}:buildcache,mode=max
          file: ${{ inputs.directory }}/${{ inputs.dockerfile }}
          build-args: |
            GIT_SHA="${{ github.sha }}"
          labels: |
            runnumber=${{ github.run_id }}
